org: nidhoggspec
app: serverlesszoluxiones
service: RetoTecnicoZoluxiones
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:*
      Resource: 
        - arn:aws:dynamodb:us-west-2:809740043145:table/DbStarWars
functions:
  getAllData:
    handler: src/controllers/getRequest.getAllData
    name: ${sls:stage}--getAllData
    events:
      - httpApi:
          path: '/people'
          method: get
  getElementById:
    handler: src/controllers/getRequest.getElementById
    name: ${sls:stage}-getElementById
    events:
      - httpApi:
          path: /people/{id}
          method: get
  SetNewPilot:
    handler: src/controllers/postRequest.setNewPilot
    name: ${sls:stage}--SetNewPilot
    events:
      - httpApi:
          path: '/pilot'
          method: post
  SetArtificialLife:
    handler: src/controllers/postRequest.setArtificialLife
    name: ${sls:stage}--SetArtificialLife
    events:
      - httpApi:
          path: '/artificial'
          method: post
  # hello:
  #   handler: src/handler.hello
  #   name: ${sls:stage}-test1 # optional, Deployed Lambda name
  #   events:
  #     - httpApi:
  #         path: /
  #         method: get
  # createTask:
  #   handler: src/addTask.insert
  #   name: ${sls:stage}-addTask # optional, Deployed Lambda name
  #   events:
  #     - httpApi:
  #         path: /task
  #         method: post
  # getTask:
  #   handler: src/getTask.getTask
  #   name: ${sls:stage}-getTask # optional, Deployed Lambda name
  #   events:
  #     - httpApi:
  #         path: /task
  #         method: get
  # getTaskId:
  #   handler: src/getTask.getTaskId
  #   name: ${sls:stage}-getTaskId # optional, Deployed Lambda name
  #   events:
  #     - httpApi:
  #         path: /task/{id}
  #         method: get
resources:
  Resources:
    DbStarWars:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: DbStarWars
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        # ProvisionedThroughput:
        #   ReadCapacityUnits: 1
        #   WriteCapacityUnits: 1
        BillingMode: PAY_PER_REQUEST
